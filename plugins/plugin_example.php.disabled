<?php
/**
 * Example Plugin for PhCard
 * 
 * This is an example plugin that demonstrates how to:
 * 1. Register custom card effects
 * 2. Add event listeners
 * 3. Extend game functionality
 * 
 * To enable this plugin, rename it to plugin_example.php
 */

use Utils\CardEffectRegistry;
use Utils\GameEventSystem;

// === Custom Card Effects ===

// Example: Register a "triple damage" effect
CardEffectRegistry::register('triple_damage', function($context) {
    $value = $context['value'] ?? 100;
    $gameState = $context['gameState'];
    $target = $context['target'] ?? 'ai';
    
    $damage = $value * 3;
    
    if ($target === 'ai') {
        $gameState['ai_hp'] -= $damage;
    } else {
        $gameState['player_hp'] -= $damage;
    }
    
    error_log("Triple damage dealt: $damage");
    return $gameState;
});

// Example: Register a "summon companion" effect
CardEffectRegistry::register('summon_companion', function($context) {
    $gameState = $context['gameState'];
    
    // Add a 2/2 companion to player field
    $companion = [
        'name' => 'Companion',
        'type' => 'monster',
        'attack' => 200,
        'defense' => 200,
        'is_token' => true
    ];
    
    $gameState['player_field'][] = $companion;
    return $gameState;
});

// === Event Listeners ===

// Example: Track legendary card plays
GameEventSystem::on('card_played', function($data) {
    if (isset($data['card']['rarity']) && $data['card']['rarity'] === 'legendary') {
        error_log("Legendary card played: {$data['card']['name']}");
        
        // Could save to database, trigger achievement, etc.
    }
    return $data;
}, 15);

// Example: Bonus XP for winning on weekends
GameEventSystem::on('game_end', function($data) {
    if ($data['result'] === 'win') {
        $dayOfWeek = date('N'); // 1 (Monday) to 7 (Sunday)
        
        if ($dayOfWeek >= 6) { // Weekend
            // Add bonus XP (would need to modify in actual implementation)
            error_log("Weekend bonus: +50 XP!");
        }
    }
    return $data;
});

// Example: Log player progression
GameEventSystem::on('level_up', function($data) {
    $userId = $data['user_id'];
    $newLevel = $data['new_level'];
    
    error_log("Player $userId reached level $newLevel!");
    
    // Could trigger notifications, achievements, etc.
    return $data;
});

// Example: Quest progress tracking
GameEventSystem::on('damage_dealt', function($data) {
    $amount = $data['amount'] ?? 0;
    
    // Track total damage for quests
    if (isset($data['user_id']) && $amount > 0) {
        // Could update quest progress here
        error_log("Damage dealt for quest tracking: $amount");
    }
    
    return $data;
});

error_log("Example plugin loaded successfully!");

?>